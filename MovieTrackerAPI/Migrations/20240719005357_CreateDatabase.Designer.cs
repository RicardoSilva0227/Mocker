// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTrackerAPI.Data;

#nullable disable

namespace MovieTrackerAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240719005357_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieTrackerAPI.Models.Movies.Movies", b =>
                {
                    b.Property<int>("movieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("movieId"));

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("movieStatus")
                        .HasColumnType("int");

                    b.Property<int?>("timesRewatched")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("movieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            movieId = 1,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1568),
                            imageUrl = "",
                            movieName = "Bambi",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 2,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1593),
                            imageUrl = "",
                            movieName = "Aristogatos",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 3,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1596),
                            imageUrl = "",
                            movieName = "A Dama e o Vagabundo",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 4,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1598),
                            imageUrl = "",
                            movieName = "101 Dalmatas",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 5,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1600),
                            imageUrl = "",
                            movieName = "Mogli",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 6,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1602),
                            imageUrl = "",
                            movieName = "Papuça e Dentuça",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 7,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1604),
                            imageUrl = "",
                            movieName = "Alladin",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 8,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1605),
                            imageUrl = "",
                            movieName = "Mulan",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 9,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1608),
                            imageUrl = "",
                            movieName = "Ratatoille",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 10,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1609),
                            imageUrl = "",
                            movieName = "Tarzan",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 11,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1611),
                            imageUrl = "",
                            movieName = "Pinochio",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 12,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1613),
                            imageUrl = "",
                            movieName = "Hercules",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 13,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1615),
                            imageUrl = "",
                            movieName = "Paraiso da Barafunda",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 14,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1617),
                            imageUrl = "",
                            movieName = "O Corcunda de Nostredame",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 15,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1618),
                            imageUrl = "",
                            movieName = "GodZilla 2014",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 16,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1620),
                            imageUrl = "",
                            movieName = "King Of Monsters",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 17,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1622),
                            imageUrl = "",
                            movieName = "Kong Vs Godzilla",
                            movieStatus = 0
                        },
                        new
                        {
                            movieId = 18,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1624),
                            imageUrl = "",
                            movieName = "Moana",
                            movieStatus = 0
                        });
                });

            modelBuilder.Entity("MovieTrackerAPI.Models.Rewatched.Rewatched", b =>
                {
                    b.Property<int>("rewatchedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rewatchedId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("movieId")
                        .HasColumnType("int");

                    b.Property<int>("timesRewatched")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("rewatchedId");

                    b.ToTable("Rewatched");
                });

            modelBuilder.Entity("MovieTrackerAPI.Models.User.Users", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1732),
                            username = "Ricardo"
                        },
                        new
                        {
                            userId = 2,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1735),
                            username = "Rafa"
                        },
                        new
                        {
                            userId = 3,
                            creationDate = new DateTime(2024, 7, 19, 1, 53, 57, 454, DateTimeKind.Local).AddTicks(1736),
                            username = "Alex"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
